<MudStack Justify="Justify.FlexEnd" Row="true">
    <MudButton OnClick="OnCancel" Size="Size.Small">Cancel</MudButton>
    <MudButton OnClick="Reset" Size="Size.Small">Reset</MudButton>
    <MudButton Color="Color.Primary" OnClick="SaveChanges" Size="Size.Small" StartIcon="@Icons.Material.Filled.Save" Variant="Variant.Filled">Save Changes</MudButton>
</MudStack>

<MudHtmlEditor @ref="_editor" @bind-Html="@_html" CustomHandlers="@_customHandlers">
    <MudHtmlToolbarOptions />
    <MudHtmlPicker Name="custom" Placeholder="Insert Tag ..." Options="_options" />
</MudHtmlEditor>

@code {
    private MudHtmlEditor _editor = default!;
    private string _html = "";

    [Parameter]
    public string InitialHtml { get; set; } = "";

    [Parameter]
    public EventCallback OnCancel { get; set; }

    [Parameter]
    public EventCallback<string> OnSave { get; set; }

    private Dictionary<string, string> _customHandlers = new() {
        {"custom", "const e=this.quill.getSelection(); this.quill.insertText(e.index, value);"}
    };

    private Dictionary<string, string> _options = new()
    {
        { "{{ Tag1 }}", "Tag 1" },
        { "{{ Tag2 }}", "Tag 2" },
        { "{{ Tag3 }}", "Tag 3" }
    };

    protected override void OnParametersSet()
    {
        _html = InitialHtml;
    }

    private async Task Reset()
    {
        await _editor.Reset();
    }

    private async Task SaveChanges()
    {
        await OnSave.InvokeAsync(_html);
    }
}